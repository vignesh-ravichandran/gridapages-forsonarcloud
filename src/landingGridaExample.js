import React from "react";
import styled from "@emotion/styled";
/**
 * `<Hero1440SizeXl>` ('hero (1440~) (size=xl)')
 * - [Open in Figma](https://figma.com/file/x7RRK6RwWtZuNakmbMLTVH?node-id=3191:6068)
 * - [Open in Grida](https://code.grida.co/files/x7RRK6RwWtZuNakmbMLTVH?node=3191:6068)
 *
 *
 * ---
 * @example
 * ```tsx
 * import React from "react";
 *
 * export default function () {
 *   return (
 *     <>
 *       ðŸ‘‡ instanciate widget like below. ðŸ‘‡
 *       <Hero1440SizeXl/>
 *     </>
 *   )
 * }
 * ```
 * ---
 * @params {any} props - this widget does not requires props. you can pass custom dynamic props to the widget as you want (on typescript, it will raise type check issues).
 * ---
 * @preview
 * ![](https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/2425af9b-432c-46a9-ab4b-f7a5e3180657)
 * ---
 * @remarks
 * @see {@link https://grida.co/docs} for more information.
 * ---
 * Code generated by grida.co | engine 0.0.1 (Apache-2.0) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*
 *
 *
 * ![Made with Grida](https://bridged-service-static.s3.us-west-1.amazonaws.com/branding/logo/32.png)
 * <!-- Info: Please do not remove this comment unless intended. removing this section will break grida integrations. -->
 * <!-- grida.meta.widget_declaration | engine : 0.0.1 | source : figma://x7RRK6RwWtZuNakmbMLTVH/3191:6068 -->
 */
export function Hero1440SizeXl() {
  return (
    <RootWrapperHero1440SizeXl>
      <HeroGradientBgArtwork
        src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/03313750-2926-40a2-8ccc-6faf30871085"
        alt="image of HeroGradientBgArtwork"
      />
      <HeroTextAreaWithCta>
        <HeroTextAndBody>
          <Heading1H1>Figma to Code.</Heading1H1>
          <DescriptionHolder>
            <HeroBodyText>The Final, Open-sourced Design to code solution.</HeroBodyText>
          </DescriptionHolder>
        </HeroTextAndBody>
        <CtaArea>
          <HeroPrimaryInputAsInput type="text" placeholder="Enter your Figma design url" />
          <HeroPrimaryButtonAsButton>To Code</HeroPrimaryButtonAsButton>
        </CtaArea>
      </HeroTextAreaWithCta>
      <DesignToolExampleContainer />
      <IPhoneXFrame />
    </RootWrapperHero1440SizeXl>
  );
}

const RootWrapperHero1440SizeXl = styled.div`
	min-height: 100vh;
	background-color: white;
	position: relative;
`;

const HeroGradientBgArtwork = styled.img`
	width: 785px;
	height: 739px;
	object-fit: cover;
	position: absolute;
	left: calc((calc((50% + 328px)) - 393px));
	top: 185px;
	filter: blur(426.44px);
`;

const HeroTextAreaWithCta = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: column;
	align-items: flex-start;
	gap: 62px;
	box-sizing: border-box;
	position: absolute;
	left: calc((calc((50% + -195px)) - 325px));
	top: 342px;
	width: 650px;
	height: 322px;
`;

const HeroTextAndBody = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: column;
	align-items: flex-start;
	gap: 40px;
	align-self: stretch;
	box-sizing: border-box;
	flex-shrink: 0;
`;

const Heading1H1 = styled.h1`
	color: rgba(0, 0, 0, 0.9);
	text-overflow: ellipsis;
	font-size: 80px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 700;
	letter-spacing: -2px;
	line-height: 98%;
	text-align: left;
	align-self: stretch;
	flex-shrink: 0;
`;

const DescriptionHolder = styled.div`
	display: flex;
	justify-content: center;
	flex-direction: column;
	align-items: center;
	flex: none;
	gap: 24px;
	box-sizing: border-box;
`;

const HeroBodyText = styled.span`
	color: rgb(68, 69, 69);
	text-overflow: ellipsis;
	font-size: 24px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 500;
	line-height: 160%;
	text-align: left;
	width: 319px;
`;

const CtaArea = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: row;
	align-items: flex-start;
	flex: none;
	gap: 14px;
	box-sizing: border-box;
`;

const HeroPrimaryInputAsInput = styled.input`
	width: 322px;
	box-shadow: 0px 4px 48px  rgba(0, 0, 0, 0.12);
	background-color: white;
	border: solid 1px rgb(210, 210, 210);
	border-radius: 4px;
	padding: 24px;
	box-sizing: border-box;
	color: rgb(181, 181, 181);
	font-size: 18px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 400;
	letter-spacing: -1px;
	line-height: 98%;
	text-align: start;

	::placeholder {
		color: rgb(181, 181, 181);
		font-size: 18px;
		font-family: "Helvetica Neue", sans-serif;
		font-weight: 400;
	}
`;

const HeroPrimaryButtonAsButton = styled.button`
	box-shadow: 0px 4px 48px  rgba(0, 0, 0, 0.12);
	background-color: rgb(37, 98, 255);
	border: solid 1px rgba(37, 98, 255, 0.5);
	border-radius: 4px;
	padding: 12px 48px;
	color: white;
	font-size: 18px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 500;
	letter-spacing: -1px;
	line-height: 98%;
	outline: none;
	cursor: pointer;
	align-self: stretch;
	flex-shrink: 0;

	:hover {
		opacity: 0.8;
	}

	:disabled {
		opacity: 0.5;
	}

	:active {
		opacity: 1;
	}

	:focus {}
`;

const DesignToolExampleContainer = styled.div`
	width: 904px;
	height: 565px;
	overflow: hidden;
	border-radius: 4px;
	position: absolute;
	box-shadow: 0px 4px 128px 32px rgba(0, 0, 0, 0.2);
	left: calc((calc((50% + 708px)) - 452px));
	top: 173px;
	opacity: 0.7;
`;

const IPhoneXFrame = styled.div`
	width: 282px;
	height: 611px;
	overflow: hidden;
	background-color: white;
	border-radius: 4px;
	position: absolute;
	box-shadow: 0px 3px 103px 26px rgba(0, 0, 0, 0.2);
	left: calc((calc((50% + 353px)) - 141px));
	top: 240px;
	opacity: 0.9;
`;
